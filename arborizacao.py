# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14gbsmdX-oORQg8qqKaHyQ_Imsf0_FEA0
"""

import streamlit as st
from keras.models import load_model
from PIL import Image, ImageOps
import numpy as np

np.set_printoptions(suppress=True)

@st.cache(allow_output_mutation=True)
def load_keras_model(model_path):
    return load_model(model_path, compile=False)

def preprocess_image(image_path):
    image = Image.open(image_path).convert("RGB")
    size = (224, 224)
    image = ImageOps.fit(image, size, Image.ANTIALIAS)
    image_array = np.asarray(image)
    normalized_image_array = (image_array.astype(np.float32) / 127.5) - 1
    return np.expand_dims(normalized_image_array, axis=0)

def main():
    st.title("Classificador de Imagens")

    model_path = st.text_input("Caminho do modelo Keras (.h5):")
    labels_path = st.text_input("Caminho do arquivo de rótulos (.txt):")
    image_path = st.text_input("Caminho da imagem para teste:")

    if st.button("Carregar Modelo e Rótulos"):
        global model, class_names
        model = load_keras_model(model_path)
        class_names = open(labels_path, "r").readlines()
        st.success("Modelo e rótulos carregados com sucesso!")

    if 'model' in globals() and 'class_names' in globals():
        if st.button("Processar Imagem"):
            data = preprocess_image(image_path)
            prediction = model.predict(data)
            index = np.argmax(prediction)
            class_name = class_names[index]
            confidence_score = prediction[0][index]
            
            st.write("Classe:", class_name[2:])
            st.write("Pontuação de Confiança:", confidence_score)

if __name__ == "__main__":
    main()
